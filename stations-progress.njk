---
pageTitle: Stations Progress
stylesheets:
- stations-progress
eleventyNavigation:
  key: Stations Project
  order: 6
---

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
   integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
   crossorigin=""/>
<!-- Make sure you put this AFTER Leaflet's CSS -->
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
 integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
 crossorigin=""></script>

<p>Since 2021, I have been working on a long-term project to visit railway stations. This page tracks my progress as I gradually tick off and complete my home county, then the neighbouring ones, then others, then eventually maybe England, and maybe after that Wales and Scotland. More info will eventually appear on my blog.</p>

<div id="map-container">
  <div id="map"></div>

  <fieldset>
    <label for="ra">Drag the slider to show progress over time:</label>
    <div>
      <input type="range" min="0" max="{{ null | numberOfDaysSince("20200801") }}" name="r" id="ra" value="{{ null | numberOfDaysSince("20200801") }}">
      <div id="slider-date"></div>
    </div>
  </fieldset>
</div>

{% set js %}
  const mymap = L.map('map').setView([51.805, 0.29], 8);
  L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="/copyright">OpenStreetMap contributors</a>. Tiles style by <a href="https://www.hotosm.org/" target="_blank">Humanitarian OpenStreetMap Team</a> hosted by <a href="https://openstreetmap.fr/" target="_blank">OpenStreetMap France</a>',
    maxZoom: 22
  }).addTo(mymap);

  const openrailwaymap = new L.TileLayer('https://{s}.tiles.openrailwaymap.org/standard/{z}/{x}/{y}.png', {
    attribution: 'Railway layer: <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA 2.0</a> <a href="http://www.openrailwaymap.org/">OpenRailwayMap</a> and OpenStreetMap',
    minZoom: 2,
    maxZoom: 19,
    tileSize: 256
  }).addTo(mymap);

  {% for station in visitedStations %}
  {
    let myIcon = L.divIcon({className: 'visited visited-{{ station.firstTrip.date | numberOfDaysSince("20200801") }}'});
    L.marker([{{ station.lat }}, {{ station.long }}], { icon: myIcon }).bindPopup("<b>{{ station.name }}</b> ({{ station.code }})<br>First visit: ({{ station.firstTrip.date | dateObjectToShortDate }})<br>Number of visits: {{ station.visitCount }}").addTo(mymap);
  }
  {% endfor %}
  const myIcon2 = L.divIcon({className: 'unvisited'});
  {% for station in unvisitedStations %}
    L.marker([{{ station.lat }}, {{ station.long }}], { icon: myIcon2 }).bindPopup("<b>{{ station.name }}</b> ({{ station.code }})").addTo(mymap);
  {% endfor %}

  function updateIconsForDate(d) {
    const dateElement = document.getElementById("slider-date");
    const date = new Date(2020, 7, 1);
    date.setDate(date.getDate() + Number(d));
    const yyyy = date.getFullYear();
    let mm = date.getMonth() + 1;
    let dd = date.getDate();
    if (dd < 10) dd = '0' + dd;
    if (mm < 10) mm = '0' + mm;
    dString = dd + '/' + mm + '/' + yyyy;
    dateElement.innerText = dString;
    {% for station in visitedStations %}
    if (Number(d) >= {{ station.firstTrip.date | numberOfDaysSince("20200801") }}) {
      const els = document.getElementsByClassName("visited-{{ station.firstTrip.date | numberOfDaysSince("20200801") }}");
      for (el of els) {
        el.classList.remove("visited-post-date");
      }
    } else {
      const els = document.getElementsByClassName("visited-{{ station.firstTrip.date | numberOfDaysSince("20200801") }}");
      for (el of els) {
        el.classList.add("visited-post-date");
      }
    }
    {% endfor %}
  }

  let timeout;
  document.getElementById("ra").addEventListener("input", function() {
    clearTimeout(timeout);
    const v = this.value;
    timeout = setTimeout(function() { updateIconsForDate(v); }, 100)
  });
  updateIconsForDate(document.getElementById("ra").value);

  L.Control.Fullscreen = L.Control.extend({
    options: {
        position: 'topleft',
        title: {
            'false': 'View Fullscreen',
            'true': 'Exit Fullscreen'
        }
    },

    onAdd: function (map) {
        var container = L.DomUtil.create('div', 'leaflet-control-fullscreen leaflet-bar leaflet-control');

        this.link = L.DomUtil.create('a', 'leaflet-control-fullscreen-button leaflet-bar-part', container);
        this.link.href = '#';
        this.link.title = "Toggle Fullscreen";

        this.map = map;

        L.DomEvent.on(this.link, 'click', this._click, this);
        return container;
    },

    _click: function (e) {
        L.DomEvent.stopPropagation(e);
        L.DomEvent.preventDefault(e);
        document.getElementById("map-container").classList.toggle("full");
        this.map.invalidateSize();
    }
  });

  mymap.addControl(new L.Control.Fullscreen());
{% endset %}

<h2>About</h2>

<h3>About my Stations project</h3>

<p>You will soon be able to read more about my project to visit stations on my blog.</p>

<h3>About these stats</h3>

<ul>
  <li>Rather than aim for all 2,570+ stations in one go, I started local, so I only loaded my home county (Suffolk) and its neighbours onto the map. As time has gone on, I&rsquo;ve gradually added more counties to the map.</li>
  <li>If I&rsquo;ve visited a station that is in a county not yet on the map, I&rsquo;ll add it as an &ldquo;Extra&rdquo; until I&rsquo;m ready to add the whole county.</li>
  <li>The County breakdown below shows a total of stations &ldquo;on map&rdquo;, then the total of counties not yet loaded onto the map, then the total for Wales and Scotland, in order to get the current figure of National Rail Stations.</li>
  <li>Use the slider below the map to change the &ldquo;date&rdquo;&mdash;this will show you when I visited each station, as the blobs change from light to dark green.</li>
  <li>The breakdown and the map are all generated from data stored in a Google Sheets spreadsheet. One day I&rsquo;ll write a blog post about how this all works, but for now all you need to know is that this page gets updated at least once a day.</li>
  <li>Let me know if there&rsquo;s something you would like to see on this page.</li>
</ul>
    
<h2>County breakdown</h2>
<table class="countytable">
  {% for county in countyStats %}
    <tr class="{{ "complete" if (county.percentage == 100 and county.name != "Extras") }}
      {{ "started" if (county.percentage > 0 and county.percentage < 50) }}
      {{ "halfway" if (county.percentage >= 50 and county.percentage < 100) }}
      {{ "total-on-map" if (county.name == "England" or county.name == "Scotland" or county.name == "Wales") }}
      {{ "total" if (county.name == "Total") }}"><td>{{ county.name }}{% if county.name == "London" %} (<a href="#london-breakdown">breakdown</a>){% endif %}</td><td>{{ county.total }}</td><td>{{ county.visited }}</td><td class="percentage">{% if county.name != "Extras" %}{{ county.percentage }}%{% endif %}</td></tr>
  {% endfor %}
</table>

<h2 id="london-breakdown">London breakdown</h2>
<table class="countytable">
  {% for county in londonStats %}
    <tr class="{{ "complete" if county.percentage == 100 }}
      {{ "started" if (county.percentage > 0 and county.percentage < 50) }}
      {{ "halfway" if (county.percentage >= 50 and county.percentage < 100) }}
      {{ "total" if (county.name == "Total") }}"><td>{{ county.name }}</td><td>{{ county.total }}</td><td>{{ county.visited }}</td><td class="percentage">{{ county.percentage }}%</td></tr>
  {% endfor %}
</table>

<h2>Milestones</h2>

<ul>
  <li>Decided to start visiting all stations: <b>Saturday 19 June 2021</b> (when I ticked off the Sheringham line).</li>
  <li>Visits backdated to: <b>Saturday 8 August 2020</b>. This was my first train travel after the first Covid lockdown, so I decided to include any stations visited since then in my count and ignore any pre-Covid travel.</li>
  <li>200 stations: <b>Sunday 14 August 2022</b>.</li>
  <li>10% of all National Rail stations: <b>Saturday 10 September 2022</b>.</li>
  <li>300 stations: <b>Saturday 26 November 2022</b>.</li>
  <li>Suffolk complete: <b>Sunday 27 November 2022</b>.</li>
  <li>400 stations: <b>Sunday 9 April 2023</b>.</li>
  <li>Kent complete: <b>Tuesday 11 April 2023</b>.</li>
  <li>500 stations: <b>Saturday 17 June 2023</b>.</li>
  <li>25% of all England stations: <b>Saturday 17 June 2023</b>.</li>
  <li>Norfolk complete: <b>Saturday 2 September 2023</b>.</li>
  <li>600 stations: <b>Sunday 8 October 2023</b>.</li>
  <li>Essex complete: <b>Saturday 23 December 2023</b>.</li>
  <li>Cambridgeshire complete: <b>Wednesday 14 February 2024</b>.</li>
  <li>25% of all National Rail stations: <b>Sunday 18 February 2024</b>.</li>
  <li>700 stations: <b>Saturday 13 April 2024</b>.</li>
  <li>Rutland complete: <b>Sunday 19 May 2024</b>.</li>
  <li>800 stations: <b>Wednesday 29 May 2024</b>.</li>
  <li>Herefordshire complete: <b>Friday 31 May 2024</b>.</li>
</ul>

<script>
  {{ js | jsmin | safe }}
</script>
