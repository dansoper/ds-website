---
layout: main
eleventyNavigation:
  key: Compositions etc.
  parent: Music
---

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
   integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
   crossorigin=""/>
   <!-- Make sure you put this AFTER Leaflet's CSS -->
 <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
   integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
   crossorigin=""></script>
    <div id="map"></div>
    <style>
    #map { height: 500px; }
    </style>
<input type="range" min="0" max="{{ null | numberOfDaysSince("20200801") }}" name="r" id="ra">

    <script>
    var mymap = L.map('map').setView([51.805, 0.29], 8);
/*L.tileLayer('https://{s}.tile.thunderforest.com/transport/{z}/{x}/{y}.png?apikey={apikey}', {
	attribution: '&copy; <a href="http://www.thunderforest.com/">Thunderforest</a>, &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
	apikey: 'b446c84d6ea0464e870c4fabdf7e5de5',
	maxZoom: 22
}).addTo(mymap);*/

L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {
	attribution: '&copy; <a href="/copyright">OpenStreetMap contributors</a>. Tiles style by <a href="https://www.hotosm.org/" target="_blank">Humanitarian OpenStreetMap Team</a> hosted by <a href="https://openstreetmap.fr/" target="_blank">OpenStreetMap France</a>',
	maxZoom: 22
}).addTo(mymap);


var openrailwaymap = new L.TileLayer('http://{s}.tiles.openrailwaymap.org/standard/{z}/{x}/{y}.png',
{
	attribution: 'Railway layer: <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA 2.0</a> <a href="http://www.openrailwaymap.org/">OpenRailwayMap</a> and OpenStreetMap',
	minZoom: 2,
	maxZoom: 19,
	tileSize: 256
}).addTo(mymap);

//var myIcon = L.divIcon({className: 'visited'});
{% for station in visitedStations %}
var myIcon = L.divIcon({className: 'visited visited-{{ station.firstTrip.date | numberOfDaysSince("20200801") }}'});
L.marker([{{ station.lat }}, {{ station.long }}], { icon: myIcon }).bindPopup("<b>{{ station.name }}</b> ({{ station.code }})<br>First visit: ({{ station.firstTrip.date }})<br>Number of visits: {{ station.visitCount }}").addTo(mymap);
{% endfor %}
var myIcon2 = L.divIcon({className: 'unvisited'});
{% for station in unvisitedStations %}
L.marker([{{ station.lat }}, {{ station.long }}], { icon: myIcon2 }).bindPopup("<b>{{ station.name }}</b> ({{ station.code }})").addTo(mymap);
{% endfor %}

// Debounce it
// Better date so that we are doing it per week?

function updateIconsForDate(d) {
{% for station in visitedStations %}
if (Number(d) >= {{ station.firstTrip.date | numberOfDaysSince("20200801") }}) {
  var els = document.getElementsByClassName("visited-{{ station.firstTrip.date | numberOfDaysSince("20200801") }}");
  for (el of els) {
    el.style.backgroundColor = "blue";
  }
} else {
var els = document.getElementsByClassName("visited-{{ station.firstTrip.date | numberOfDaysSince("20200801") }}");
  for (el of els) {
    el.style.backgroundColor = "purple";
  }
}
{% endfor %}
}
var timeout;
document.getElementById("ra").addEventListener("input", function() {
clearTimeout(timeout);
let v = this.value;
timeout = setTimeout(function() { updateIconsForDate(v); }, 100)
});
    </script>
<style>
.visited, .unvisited
{
  background:red;
  border:2px solid rgba(255,255,255,0.5);
  color:blue;
  font-weight:bold;
  text-align:center;
  border-radius:50%;
  line-height:9px;
  box-shadow: rgb(0,0,0,0.3) 0px 0px 4px 1px;
}

.visited {
  /*background: green;*/
}

</style>
<table>
  {% for county in countyStats %}
<tr><td>{{ county.name }}</td><td>{{ county.total }}</td><td>{{ county.visited }}</td><td>{{ county.percentage }}</td></tr>
{% endfor %}
  </table>